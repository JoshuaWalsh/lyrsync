@import url('https://fonts.googleapis.com/css?family=Rouge+Script&display=block');

.start {
    font-family: 'Rouge Script', cursive;
    font-size: 1rem;
}

.lyricsContainer.fallen-angel {
    $pi: 3.14159265359;
    $tau: $pi * 2;

    $text-movement-time: 1;
    $card-transition-time: 1;
    $arc-angle: $tau / 6;
    $start-angle: $arc-angle * 0.1;
    $end-angle: $arc-angle * -0.05;
    $rotate-in-angle: $tau / 4;
    $rotate-out-angle: $tau / 4;

    $spinner-bpm: 95;
    $spinner-colours: (#FF9AA2, #FFB7B2, #FFDAC1, #E2F0CB, #B5EAD7, #C7CEEA);
    $spinner-revolution-time: length($spinner-colours) / $spinner-bpm;

    $chorus-rotate-time: 5;

    position: relative;
    font-family: 'Rouge Script', cursive;
    font-size: 1rem;

    --radius: calc(var(--container-width) / #{$arc-angle});
    --circumference: calc(var(--radius) * $tau);
    --cue-timers: --spinner start 0 start #{$spinner-revolution-time} linear none none none;

    &::before {
        content: ' ';
        display: block;

        width: 500vw;
        height: 500vh;
        min-width: 500vh;
        min-height: 500vw;

        top: 50%;
        left: 50%;

        background: conic-gradient($spinner-colours);

        transform: translate(-50%, -50%) rotate(calc(var(--spinner) * -1turn));
    }

    .card {
        --card-timers: --fade-in start -#{$text-movement-time} end #{$card-transition-time} instant instantOut, --slow-rotate start -#{$text-movement-time} end #{$card-transition-time} linear, --rotate-out end -#{$card-transition-time} end 0 easeIn;

        transform-origin: 50% calc(50% + var(--radius) * 1px);
        transform: rotate(calc((var(--slow-rotate) * (#{$end-angle - $start-angle}) + #{$start-angle}) * 1rad + (var(--rotate-out) * -#{$rotate-out-angle}) * 1rad));

        opacity: var(--fade-in);

        margin-top: -1.5rem;

        .contents {
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            transform: translateY(-50%);
            text-align: center;
        }

        .voice {
            display: block;
            overflow: visible;
            padding: 0;
            font-size: 0;

            --movement-direction: -1;

            &:first-child {
                --movement-direction: 1;
            }

            .voiceContents {
                display: inline-block;

                overflow: visible;
                padding: 0.1rem;
                font-size: 1rem;

                --voice-radius: calc(var(--radius) - var(--voice-contents-top-within-card) + var(--container-height) / 2);

                .word {
                    --word-timers: --rotate-in start -#{$text-movement-time} start 0 easeOut;

                    --centre-offset: calc(var(--word-left-within-voice-contents) + var(--word-width) / 2 - var(--voice-width) / 2);
                    --word-radius: calc(var(--voice-radius) - var(--word-top-within-voice-contents));
                    --rotation: calc(var(--centre-offset) / var(--word-radius) * 1rad);
                    
                    display: inline-block;
                    vertical-align: middle;
            
                    transform-origin: 50% calc(var(--word-radius) * 1px);
                    transform: translateX(calc(var(--centre-offset) * -1px)) rotate(calc(var(--rotation) + (1 - var(--rotate-in)) * #{$rotate-in-angle} * 1rad));
                }
            }

            &::after {
                display: block;
                content: ' ';

                margin: 0.4rem auto;
                height: 1px;
                width: 1px;
                margin: auto;
                background: white;

                --separator-width: calc((var(--voice-width) + var(--next-voice-width)) / 2);
                --previous-separator-width: calc((var(--previous-card-voice-width) + var(--previous-card-next-voice-width)) / 2);

                --current-width: calc(var(--previous-separator-width) + (var(--separator-width) - var(--previous-separator-width)) * var(--separator-glide));

                transform: scaleX(var(--current-width));
            }

            &:last-child::after {
                display: none;
                content: none;
            }
        }

        &.chorus {
            --card-timers: --fade-in start -#{$chorus-rotate-time} end #{$chorus-rotate-time} instant instantOut, --chorus-rotate-start start -#{$chorus-rotate-time} start 0 linear none none none, --chorus-rotate-end end 0 end #{$chorus-rotate-time} linear none none none;

            margin-top: 1.5rem;
            
            transform: rotate(calc((var(--chorus-rotate-start) + var(--chorus-rotate-end) - 1) * 0.5 * #{$arc-angle} * -1rad));

            .voice .voiceContents {
                .word {
                    --bright-colour: #FFFFFF;
                    --dim-colour: #888888;
                    --word-timers: --active start 0 end 0 instant instantOut, --fade-in start -0.2 start 0 linear, --fade-out end 0 end 0.5 linear;

                    position: relative;

                    color: white;
                    opacity: calc(50% + (var(--fade-in) - var(--fade-out)) * 50%);

                    /*transform: translateX(calc(var(--centre-offset) * -1px)) rotate(calc(var(--rotation) + (1 - var(--rotate-in) - var(--rotate-out)) * #{$rotate-in-angle} * 1rad));*/
                    transform: translateX(calc(var(--centre-offset) * -1px)) rotate(var(--rotation));
                    /*opacity: calc(0.5 + 0.5 * var(--active));*/
                }
            }
        }

        &.instrumental {
            --card-timers: --fade-in start -#{$card-transition-time} start 0 linear, --progress start 0 end 0 linear;

            &::before {
                display: block;
                content: ' ';

                position: absolute;
                top: 0;
                left: 0;
                height: 4px;
                width: calc(var(--progress) * 100%);

                background: white;
            }
        }
    }

    &.layout {
        .card {
            transform: none;
        }

        .card .voice .voiceContents .word {
            transform: none;
        }

        .card.chorus .voice .voiceContents .word {
            position: static;
        }
    }
}